name: Test externally

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:

jobs:

  test_externally:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        bazel: [last_green]
        bazel_mode: [workspace, module, module_dynamic_mode_off, module_native_cc_test]
        os: [windows-2019]
        jdk: [17]
        include:
          - os: windows-2019
            cache: "C:\\tmp\\bazel-disk"
          - bazel_mode: module
            bazel_extra_args: "--config=bzlmod"
          - bazel_mode: module_dynamic_mode_off
            bazel_extra_args: "--config=bzlmod --dynamic_mode=off"
          - bazel_mode: module_native_cc_test
            bazel_extra_args: "--config=bzlmod --experimental_builtins_injection_override=-cc_test"
    name: Test externally (${{ matrix.os }}, Bazel ${{ matrix.bazel }} ${{ matrix.bazel_mode }}, JDK ${{ matrix.jdk }})
    env:
      BAZELISK_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.jdk }}

      - name: Mount Bazel disk cache
        uses: actions/cache@v2
        with:
          path: ${{ matrix.cache }}
          key: bazel-disk-cache-${{ matrix.bazel }}-${{ matrix.os }}-${{ matrix.jdk }}

      - name: Clear WORKSPACE
        if: matrix.bazel_mode == 'module'
        working-directory: ./tests
        run: echo 'workspace(name = "fmeum_rules_jni_tests")' > WORKSPACE

      - name: Run tests externally
        env:
          USE_BAZEL_VERSION: ${{ matrix.bazel }}
        working-directory: ./tests
        run: bazelisk test --config=ci --disk_cache=${{ matrix.cache }} --profile=${{ github.workspace }}/profile.gz ${{ matrix.bazel_extra_args }} ${{ matrix.bazel_macos_args }} //...

      - name: Check coverage
        if: ${{ (matrix.os == 'ubuntu-latest') && (matrix.jdk == '11') }}
        env:
          USE_BAZEL_VERSION: ${{ matrix.bazel }}
        working-directory: ./tests
        run: |
          sudo apt install clang-10 llvm-10
          bazelisk coverage --config=ci --disk_cache=${{ matrix.cache }} --profile=${{ github.workspace }}/profile.gz ${{ matrix.bazel_extra_args }} ${{ matrix.bazel_macos_args }} //...
          ./verify_coverage.sh

      - name: Debug param file
        if: always()
        env:
          USE_BAZEL_VERSION: ${{ matrix.bazel }}
        working-directory: ./tests
        shell: bash
        run: |
          cp $(bazelisk info execution_root)/bazel-out/x64_windows-fastbuild/bin/external/fmeum_rules_jni/jni/tools/libjvm_stub/*.params ../ || true
          cp $(bazelisk info execution_root)/bazel-out/x64_windows-fastbuild/bin/external/rules_jni.override/jni/tools/libjvm_stub/*.params ../ || true

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: testlogs-${{ matrix.bazel}}-${{ matrix.os }}-${{ matrix.jdk }}-${{ matrix.bazel_mode }}
          # https://github.com/actions/upload-artifact/issues/92#issuecomment-711107236
          path: |
            ${{ github.workspace }}/tests/bazel-testlogs*/**/test.log
            ${{ github.workspace }}/profile.gz
            ${{ github.workspace }}/*.params
