cc_test(
    name = "hermetic_release_failure_test",
    size = "small",
    srcs = [
        "hermetic_release_failure_test.c",
    ],
    env = {
        "HERMETIC": "1",
        # Setting PATH in env directly does not work, so we let the test
        # override it with this value.
        "PATH_OVERRIDE": "",
        "RULES_JNI_TRACE": "1",
    },
    deps = [
        "@fmeum_rules_jni//jni:libjvm_lite",
    ],
)

cc_test(
    name = "hermetic_test",
    size = "small",
    env = {
        "HERMETIC": "1",
        # Setting PATH in env directly does not work, so we let the test
        # override it with this value.
        "PATH_OVERRIDE": "",
        "RULES_JNI_TRACE": "1",
    },
    deps = [
        ":libjvm_test_lib",
    ],
)

cc_test(
    name = "java_home_release_test",
    size = "small",
    env = {
        # Setting PATH in env directly does not work, so we let the test
        # override it with this value.
        "PATH_OVERRIDE": "",
        "RULES_JNI_TRACE": "1",
    },
    env_inherit = [
        "JAVA_HOME",
    ],
    deps = [
        ":libjvm_release_test_lib",
    ],
)

cc_test(
    name = "java_home_test",
    size = "small",
    env = {
        # Setting PATH in env directly does not work, so we let the test
        # override it with this value.
        "PATH_OVERRIDE": "",
        "RULES_JNI_TRACE": "1",
    },
    env_inherit = [
        "JAVA_HOME",
    ],
    deps = [
        ":libjvm_test_lib",
    ],
)

cc_test(
    name = "path_release_test",
    size = "small",
    env = {
        "RULES_JNI_TRACE": "1",
    },
    env_inherit = [
        "PATH",
    ],
    deps = [
        ":libjvm_release_test_lib",
    ],
)

cc_test(
    name = "path_test",
    size = "small",
    env = {
        "RULES_JNI_TRACE": "1",
    },
    env_inherit = [
        "PATH",
    ],
    deps = [
        ":libjvm_test_lib",
    ],
)

cc_library(
    name = "libjvm_test_lib",
    srcs = ["libjvm_test.cpp"],
    data = [":HelloFromJava_deploy.jar"],
    deps = [
        "@bazel_tools//tools/cpp/runfiles",
        "@fmeum_rules_jni//jni:libjvm",
    ],
)

cc_library(
    name = "libjvm_release_test_lib",
    srcs = ["libjvm_test.cpp"],
    data = [":HelloFromJava_deploy.jar"],
    deps = [
        "@bazel_tools//tools/cpp/runfiles",
        "@fmeum_rules_jni//jni:libjvm_lite",
    ],
)

java_binary(
    name = "HelloFromJava",
    srcs = ["src/test/java/com/example/HelloFromJava.java"],
    create_executable = False,
    deps = [
        "@maven//:net_bytebuddy_byte_buddy_agent",
    ],
)
