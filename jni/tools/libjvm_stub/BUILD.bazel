load(":current_java_runtime.bzl", "current_java_runtime")
load(":current_repository.bzl", "RULES_JNI_REPOSITORY_DEFINE")
load("//jni/internal:common.bzl", "make_root_relative", "merge_cc_infos")

merge_cc_infos(
    name = "libjvm_stub_with_jni",
    visibility = ["//jni:__pkg__"],
    deps = [
        ":libjvm_stub",
        "//jni",
    ],
)

merge_cc_infos(
    name = "libjvm_stub_release_with_jni",
    visibility = ["//jni:__pkg__"],
    deps = [
        ":libjvm_stub_release",
        "//jni",
    ],
)

cc_library(
    name = "libjvm_stub",
    hdrs = [
        "rules_jni.h",
    ],
    deps = [
        ":bazel",
        ":libjvm_stub_lib",
    ],
)

cc_library(
    name = "libjvm_stub_release",
    hdrs = [
        "rules_jni.h",
    ],
    deps = [
        ":libjvm_stub_lib",
        ":release",
    ],
)

cc_library(
    name = "libjvm_stub_lib",
    srcs = [
        "libjvm_stub.c",
        "rules_jni_internal.h",
    ] + select({
        "@platforms//os:windows": ["windows/utils.h"],
        "//conditions:default": ["unix/utils.h"],
    }),
    copts = select({
        "@platforms//os:windows": ["-I" + make_root_relative("windows")],
        "//conditions:default": ["-I" + make_root_relative("unix")],
    }),
    includes = ["."],
    linkopts = select({
        "@platforms//os:windows": [],
        "//conditions:default": ["-ldl"],
    }),
    local_defines = select({
        "//jni/internal:collect_coverage": ["RULES_JNI_COLLECT_COVERAGE=1"],
        "//conditions:default": [],
    }),
    deps = [
        "//jni",
    ],
)

current_java_runtime(
    name = "current_java_runtime",
)

cc_library(
    name = "bazel",
    srcs = [
        "bazel.cpp",
        "rules_jni_internal.h",
    ],
    data = select({
        "//jni/internal:collect_coverage": ["//jni/tools/libjvm_stub/coverage:CoverageAgent_deploy.jar"],
        "//conditions:default": [],
    }),
    local_defines = [RULES_JNI_REPOSITORY_DEFINE] + select({
        "//jni/internal:collect_coverage": ["RULES_JNI_COLLECT_COVERAGE=1"],
        "//conditions:default": [],
    }),
    deps = [
        ":current_java_runtime",
        "//jni",
        "@bazel_tools//tools/cpp/runfiles",
    ],
)

cc_library(
    name = "release",
    srcs = [
        "release.c",
        "rules_jni_internal.h",
    ],
    deps = [
        "//jni",
    ],
)
